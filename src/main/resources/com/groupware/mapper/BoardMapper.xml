<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.groupware.mapper.BoardMapper">

	<resultMap type="BoardDTO" id="BoardDTO">
		<result property="boardIdx" column="BOARD_idx"/>
		<result property="employeeIdx" column="EMPLOYEE_IDX"/>
		<result property="boardType" column="BOARD_TYPE"/>
		<result property="content" column="CONTENT"/>
		<result property="File" column="FILE"/>
		<result property="insDate" column="INS_DATE"/>
		<result property="updDate" column="UPD_DATE"/>
		<result property="state" column="STATE"/>
		<result property="title" column="title"/>
	
	</resultMap>
	
	<resultMap type="EmployeeDTO" id="EmployeeDTO">
		<result property="employeeIdx" column="employee_idx"/>
		<result property="companyIdx" column="company_Idx"/>
		<result property="teamIdx" column="team_Idx"/>
		<result property="dutyIdx" column="duty_Idx"/>
		<result property="authorityIdx" column="authority_Idx"/>
		<result property="departmentIdx" column="department_Idx"/>
		<result property="name" column="name"/>
		<result property="enName" column="en_Name"/>
		<result property="profileImage" column="profile_Image"/>
		<result property="gender" column="gender"/>
		<result property="birthday" column="birthday"/>
		<result property="phoneNumber" column="phone_Number"/>
		<result property="email" column="email"/>
		<result property="salary" column="salary"/>
		<result property="annualLeave" column="annual_Leave"/>
		<result property="state" column="state"/>
		<result property="hireDate" column="hire_Date"/>
		<result property="resignationDate" column="resignation_Date"/>
		<result property="insDate" column="ins_Date"/>
		<result property="updDate" column="upd_Date"/>
		<collection property="BoardDTO" resultMap="BoardDTO" />
	</resultMap>
	
	<select id="selectemployee_idx" parameterType="BoardDTO" resultMap="BoardDTO">
		SELECT b.*
		FROM Board b 
		left join Employee e on b.employee_idx = e.employee_idx
		where b.employee_idx = #{e.employeeIdx}
	</select>
	
	
  <select id="getBoardList" resultMap="BoardDTO">
  	select * from board
  </select>
  
   <insert id="insert">
  	 insert into board(BOARD_IDX,EMPLOYEE_IDX, BOARD_TYPE, "CONTENT","FILE",INS_DATE,UPD_DATE,STATE,TITLE)
  	 values(BOARD_SEQ.NEXTVAL,#{employeeIdx},#{boardType},#{content},#{File},SYSDATE,SYSDATE,#{state},#{title})
   </insert>
   
   
  <!-- 
  <insert id="insertSelectKey">
  	<selectKey keyProperty="boardIdx" order="BEFORE" resultType="long">
  		select BOARD_SEQ.nextval from dual
  	</selectKey>
  	insert into board(bno, title, content, writer)
  	values(#{boardIdx}, #{title}, #{content}, #{writer})
  </insert>
   -->
  
  <select id="reads" resultMap="BoardDTO">
  	select * from board where employee_idx = #{employeeIdx}
  </select>
  
  <delete id="delete">
  	delete from board where EMPLOYEE_IDX = #{boardIdx}
  </delete>
  
  <update id="update">
	  update
	  	board
	  set
	  	title = #{title},
	  	content = #{content},
	  	UPD_DATE = sysdate
	WHERE BOARD_idx = #{boardIdx}
  	
  </update> 
<!--   <select id="selectList" resultMap="testMap">
  SELECT
  	notice_idx,
  	employee_idx,
  	title,
  	ins_date,
  	upd_date,
  	name,
  	en_name,
  	rnum
  FROM
  	(
		SELECT
		    a.board_idx,
		    a.employee_idx,
		    a.title,
		    a.ins_date,
		    a.upd_date,
		    
		    b.name,
		    b.en_name,
		    ROWNUM as rnum
		FROM
		    notice a
		    LEFT JOIN employee b ON a.employee_idx = b.employee_idx
		WHERE
		    a.state = 1
		<if test='title != ""'>
			AND a.title like '%'||#{title}||'%'
		</if>
		<if test='content != ""'>
			AND a.content like '%'||#{content}||'%'
		</if>
		<if test='boardtype != ""'>
			AND b.boardtype like '%'||#{boardtype}||'%'
		</if>
		<if test='sorting != ""'>
			<choose>
				<when test="sorting == 1">
				ORDER BY a.title ASC
				</when>
				<when test="sorting == 2">
				ORDER BY a.title DESC
				</when>
				<when test="sorting == 3">
				ORDER BY b.name ASC
				</when>
				<when test="sorting == 4">
				ORDER BY b.name DESC
				</when>
				<when test="sorting == 5">
				ORDER BY a.ins_date ASC
				</when>
				<when test="sorting == 6">
				ORDER BY a.ins_date DESC
				</when>
				<when test="sorting == 7">
				ORDER BY a.view_cnt ASC
				</when>
				<when test="sorting == 8">
				ORDER BY a.view_cnt DESC
				</when>								
			</choose>	
		</if>
		)
	WHERE
		<![CDATA[ rnum >= #{startNum} AND rnum <= #{pageSize} ]]>
  </select> -->
</mapper>








